import { Buffer } from "buffer";
import {
  Client as ContractClient,
  Spec as ContractSpec,
} from "@stellar/stellar-sdk/contract";
export * from "@stellar/stellar-sdk";
export * as contract from "@stellar/stellar-sdk/contract";
export * as rpc from "@stellar/stellar-sdk/rpc";
if (typeof window !== "undefined") {
  //@ts-ignore Buffer exists
  window.Buffer = window.Buffer || Buffer;
}
export const ContractErrors = {
  0: { message: "UnexpectedError" },
  1: { message: "InvalidKey" },
  2: { message: "ProjectAlreadyExist" },
  3: { message: "UnregisteredMaintainer" },
  4: { message: "NoHashFound" },
  5: { message: "InvalidDomainError" },
  6: { message: "MaintainerNotDomainOwner" },
  7: { message: "ProposalInputValidation" },
  8: { message: "NoProposalorPageFound" },
  9: { message: "AlreadyVoted" },
  10: { message: "ProposalVotingTime" },
  11: { message: "ProposalActive" },
  12: { message: "WrongVoteType" },
  13: { message: "WrongVoter" },
  14: { message: "TallySeedError" },
  15: { message: "InvalidProof" },
  16: { message: "NoAnonymousVotingConfig" },
  17: { message: "BadCommitment" },
  18: { message: "UnknownMember" },
  19: { message: "MemberAlreadyExist" },
  20: { message: "VoterWeight" },
};
export var Badge;
(function (Badge) {
  Badge[(Badge["Developer"] = 10000000)] = "Developer";
  Badge[(Badge["Triage"] = 5000000)] = "Triage";
  Badge[(Badge["Community"] = 1000000)] = "Community";
  Badge[(Badge["Verified"] = 500000)] = "Verified";
  Badge[(Badge["Default"] = 1)] = "Default";
})(Badge || (Badge = {}));
export class Client extends ContractClient {
  options;
  static async deploy(
    /** Constructor/Initialization Args for the contract's `__constructor` method */
    { admin, domain_contract_id },
    /** Options for initializing a Client as well as for calling a method, with extras specific to deploying. */
    options,
  ) {
    return ContractClient.deploy({ admin, domain_contract_id }, options);
  }
  constructor(options) {
    super(
      new ContractSpec([
        "AAAAAAAAAMBBbm9ueW1vdXMgdm90aW5nIHByaW1pdGl2ZXMuCgojIEFyZ3VtZW50cwoqIGBlbnZgIC0gVGhlIGVudmlyb25tZW50IG9iamVjdAoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgcHVibGljX2tleWAgLSBBc3ltbWV0cmljIHB1YmxpYyBrZXkgdG8gYmUgdXNlZCB0byBlbmNvZGUgc2VlZHMAAAAWYW5vbnltb3VzX3ZvdGluZ19zZXR1cAAAAAAAAgAAAAAAAAALcHJvamVjdF9rZXkAAAAADgAAAAAAAAAKcHVibGljX2tleQAAAAAAEAAAAAA=",
        "AAAAAAAAAAAAAAAbZ2V0X2Fub255bW91c192b3RpbmdfY29uZmlnAAAAAAEAAAAAAAAAC3Byb2plY3Rfa2V5AAAAAA4AAAABAAAH0AAAABNBbm9ueW1vdXNWb3RlQ29uZmlnAA==",
        "AAAAAAAAAhhCdWlsZCBhbGwgdGhyZWUgY29tbWl0bWVudHMgZnJvbSB0aGUgdm90ZXMgYW5kIHNlZWRzLgoKRG9lcyBub3QgdGFrZSBpbnRvIGFjY291bnQgd2VpZ2h0cyBhcyB0aGlzIHdpbGwgYmUgY29uc2lkZXJlZCBvbmx5CmR1cmluZyB0aGUgdGFsbHlpbmcgcGhhc2UuCgpDYWxsaW5nIHRoYXQgb24gdGhlIHNtYXJ0IGNvbnRyYWN0IGl0c2VsZiB3b3VsZCByZXZlYWwgdGhlIHZvdGVzIGFuZCBzZWVkcy4KVGhpcyBjYW4gYmUgcnVuIGluIHNpbXVsYXRpb24gaW4geW91ciBSUEMgb3IgdXNlZCBhcyBhIGJhc2lzIGZvcgppbXBsZW1lbnRhdGlvbiBjbGllbnQtc2lkZS4KCiMgQXJndW1lbnRzCiogYGVudmAgLSBUaGUgZW52aXJvbm1lbnQgb2JqZWN0CiogYHByb2plY3Rfa2V5YCAtIFVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgcHJvamVjdAoqIGB2b3Rlc2AgLSBWZWN0b3Igb2Ygdm90ZXMuCiogYHNlZWRzYCAtIFZlY3RvciBvZiBzZWVkcy4KIyBSZXR1cm5zCiogYFZlYzxCeXRlc048OTY+PmAgLSBUaGUgdGhyZWUgdm90aW5nIGNvbW1pdG1lbnRzLgAAABxidWlsZF9jb21taXRtZW50c19mcm9tX3ZvdGVzAAAAAwAAAAAAAAALcHJvamVjdF9rZXkAAAAADgAAAAAAAAAFdm90ZXMAAAAAAAPqAAAABAAAAAAAAAAFc2VlZHMAAAAAAAPqAAAABAAAAAEAAAPqAAAD7gAAAGA=",
        "AAAAAAAAAcFDcmVhdGUgYSBwcm9wb3NhbCBvbiB0aGUgREFPIG9mIHRoZSBwcm9qZWN0LgpQcm9wb3NhbCBpbml0aWF0b3JzIGFyZSBhdXRvbWF0aWNhbGx5IHB1dCBpbiB0aGUgYWJzdGFpbiBncm91cC4KIyBBcmd1bWVudHMKKiBgZW52YCAtIFRoZSBlbnZpcm9ubWVudCBvYmplY3QKKiBgcHJvcG9zZXJgIC0gQWRkcmVzcyBvZiB0aGUgcHJvcG9zYWwgY3JlYXRvcgoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgdGl0bGVgIC0gVGl0bGUgb2YgdGhlIHByb3Bvc2FsCiogYGlwZnNgIC0gSVBGUyBjb250ZW50IGlkZW50aWZpZXIgZGVzY3JpYmluZyB0aGUgcHJvcG9zYWwKKiBgdm90aW5nX2VuZHNfYXRgIC0gVU5JWCB0aW1lc3RhbXAgd2hlbiB2b3RpbmcgZW5kcwojIFJldHVybnMKKiBgdTMyYCAtIFRoZSBJRCBvZiB0aGUgY3JlYXRlZCBwcm9wb3NhbAAAAAAAAA9jcmVhdGVfcHJvcG9zYWwAAAAABgAAAAAAAAAIcHJvcG9zZXIAAAATAAAAAAAAAAtwcm9qZWN0X2tleQAAAAAOAAAAAAAAAAV0aXRsZQAAAAAAABAAAAAAAAAABGlwZnMAAAAQAAAAAAAAAA52b3RpbmdfZW5kc19hdAAAAAAABgAAAAAAAAANcHVibGljX3ZvdGluZwAAAAAAAAEAAAABAAAABA==",
        "AAAAAAAAAQ5DYXN0IGEgdm90ZSBvbiBhIHByb3Bvc2FsLgpEb3VibGUgdm90ZXMgYXJlIG5vdCBhbGxvd2VkLgojIEFyZ3VtZW50cwoqIGBlbnZgIC0gVGhlIGVudmlyb25tZW50IG9iamVjdAoqIGB2b3RlcmAgLSBBZGRyZXNzIG9mIHRoZSB2b3RlcgoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgcHJvcG9zYWxfaWRgIC0gSUQgb2YgdGhlIHByb3Bvc2FsCiogYHZvdGVgIC0gQXBwcm92ZSwgcmVqZWN0IG9yIGFic3RhaW4gZGVjaXNpb24AAAAAAAR2b3RlAAAABAAAAAAAAAAFdm90ZXIAAAAAAAATAAAAAAAAAAtwcm9qZWN0X2tleQAAAAAOAAAAAAAAAAtwcm9wb3NhbF9pZAAAAAAEAAAAAAAAAAR2b3RlAAAH0AAAAARWb3RlAAAAAA==",
        "AAAAAAAAAvxFeGVjdXRlIGEgdm90ZSBhZnRlciB0aGUgdm90aW5nIHBlcmlvZCBlbmRzLgoKV2hlbiBwcm9wb3NhbHMgYXJlIGFub255bW91cywgYHRhbGx5YCBpcyB2YWxpZGF0ZWQgYWdhaW5zdCB0aGUgc3VtIG9mCmFsbCB2b3RlIGNvbW1pdG1lbnRzLiBUaGUgYHNlZWRgIGlzIGVzc2VudGlhbCBmb3IgdGhlIHZhbGlkYXRpb24uCgojIFBhbmljcwoKRG91YmxlIHZvdGVzIGFyZSBub3QgYWxsb3dlZC4gVGFsbHkgYW5kIHNlZWQgbXVzdCBiZSBwcmVzZW50IGZvcgphbm9ueW1vdXMgdm90ZXMgYW5kIGZvcmJpZGRlbiBvdGhlcndpc2UuIEZvciBhbm9ueW1vdXMgdm90ZXMsIGl0IHdpbGwKcGFuaWMgaWYgdGhlIGNvbW1pdG1lbnQgcHJvb2YgdmFsaWRhdGlvbiBmYWlscy4KCiMgQXJndW1lbnRzCiogYGVudmAgLSBUaGUgZW52aXJvbm1lbnQgb2JqZWN0CiogYG1haW50YWluZXJgIC0gQWRkcmVzcyBvZiB0aGUgbWFpbnRhaW5lcgoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgcHJvcG9zYWxfaWRgIC0gSUQgb2YgdGhlIHByb3Bvc2FsCiogW2BPcHRpb248dGFsbGllcz5gXSAtIGRlY29kZWQgdGFsbHkgdmFsdWVzIChzY2FsZWQgYnkgd2VpZ2h0cyksIHJlc3BlY3RpdmVseSBBcHByb3ZlLCByZWplY3QgYW5kIGFic3RhaW4KKiBbYE9wdGlvbjxzZWVkcz5gXSAtIGRlY29kZWQgc2VlZCB2YWx1ZXMgKHNjYWxlZCBieSB3ZWlnaHRzKSwgcmVzcGVjdGl2ZWx5IEFwcHJvdmUsIHJlamVjdCBhbmQgYWJzdGFpbgAAAAdleGVjdXRlAAAAAAUAAAAAAAAACm1haW50YWluZXIAAAAAABMAAAAAAAAAC3Byb2plY3Rfa2V5AAAAAA4AAAAAAAAAC3Byb3Bvc2FsX2lkAAAAAAQAAAAAAAAAB3RhbGxpZXMAAAAD6AAAA+oAAAAEAAAAAAAAAAVzZWVkcwAAAAAAA+gAAAPqAAAABAAAAAEAAAfQAAAADlByb3Bvc2FsU3RhdHVzAAA=",
        "AAAAAAAAAkVWb3RpbmcgY2hvaWNlIGNvbW1pdG1lbnQuCgpSZWNvdmVyIHRoZSBjb21taXRtZW50IGJ5IHJlbW92aW5nIHRoZSByYW5kb21pemF0aW9uIGludHJvZHVjZWQgYnkgdGhlCnNlZWQuCgpWb3RlIGNvbW1pdG1lbnQgaXM6CgpDID0gZ152ICogaF5yIChpbiBhZGRpdGl2ZSBub3RhdGlvbjogZyp2ICsgaCpyKSwKCndoZXJlIGcsIGggcG9pbnQgZ2VuZXJhdG9yIGFuZCB2IGlzIHRoZSB2b3RlIGNob2ljZSwgciBpcyB0aGUgc2VlZC4KVm90aW5nIHdlaWdodCBpcyBpbnRyb2R1Y2VkIGR1cmluZyB0aGUgdGFsbHlpbmcgcGhhc2UuCgojIEFyZ3VtZW50cwoqIGBlbnZgIC0gVGhlIGVudmlyb25tZW50IG9iamVjdAoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgY29tbWl0bWVudGAgLSBWb3RlIGNvbW1pdG1lbnQKKiBgdGFsbHlgIC0gZGVjb2RlZCB0YWxseSB2YWx1ZSAoc2NhbGVkIGJ5IHdlaWdodHMpCiogYHNlZWRgIC0gZGVjb2RlZCBzZWVkIHZhbHVlIChzY2FsZWQgYnkgd2VpZ2h0cykKIyBSZXR1cm5zCiogYGJvb2xgIC0gVHJ1ZSBpZiB0aGUgY29tbWl0bWVudCBtYXRjaAAAAAAAAAVwcm9vZgAAAAAAAAQAAAAAAAAAC3Byb2plY3Rfa2V5AAAAAA4AAAAAAAAACHByb3Bvc2FsAAAH0AAAAAhQcm9wb3NhbAAAAAAAAAAHdGFsbGllcwAAAAPqAAAABAAAAAAAAAAFc2VlZHMAAAAAAAPqAAAABAAAAAEAAAAB",
        "AAAAAAAAARRHZXQgb25lIHBhZ2Ugb2YgcHJvcG9zYWwgb2YgdGhlIERBTy4KQSBwYWdlIGhhcyAwIHRvIE1BWF9QUk9QT1NBTFNfUEVSX1BBR0UgcHJvcG9zYWxzLgojIEFyZ3VtZW50cwoqIGBlbnZgIC0gVGhlIGVudmlyb25tZW50IG9iamVjdAoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgcGFnZWAgLSBQYWdlIG9mIHByb3Bvc2FscwojIFJldHVybnMKKiBgdHlwZXM6OkRhb2AgLSBUaGUgRGFvIG9iamVjdCAodmVjdG9yIG9mIHByb3Bvc2FscykAAAAHZ2V0X2RhbwAAAAACAAAAAAAAAAtwcm9qZWN0X2tleQAAAAAOAAAAAAAAAARwYWdlAAAABAAAAAEAAAfQAAAAA0RhbwA=",
        "AAAAAAAAANdPbmx5IHJldHVybiBhIHNpbmdsZSBwcm9wb3NhbAojIEFyZ3VtZW50cwoqIGBlbnZgIC0gVGhlIGVudmlyb25tZW50IG9iamVjdAoqIGBwcm9qZWN0X2tleWAgLSBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIHByb2plY3QKKiBgcHJvcG9zYWxfaWRgIC0gSUQgb2YgdGhlIHByb3Bvc2FsCiMgUmV0dXJucwoqIGB0eXBlczo6UHJvcG9zYWxgIC0gVGhlIHByb3Bvc2FsIG9iamVjdAAAAAAMZ2V0X3Byb3Bvc2FsAAAAAgAAAAAAAAALcHJvamVjdF9rZXkAAAAADgAAAAAAAAALcHJvcG9zYWxfaWQAAAAABAAAAAEAAAfQAAAACFByb3Bvc2Fs",
        "AAAAAAAAAAAAAAAKYWRkX21lbWJlcgAAAAAAAgAAAAAAAAAObWVtYmVyX2FkZHJlc3MAAAAAABMAAAAAAAAABG1ldGEAAAAQAAAAAA==",
        "AAAAAAAAAAAAAAAKZ2V0X21lbWJlcgAAAAAAAQAAAAAAAAAObWVtYmVyX2FkZHJlc3MAAAAAABMAAAABAAAH0AAAAAZNZW1iZXIAAA==",
        "AAAAAAAAAAAAAAAKYWRkX2JhZGdlcwAAAAAABAAAAAAAAAAKbWFpbnRhaW5lcgAAAAAAEwAAAAAAAAADa2V5AAAAAA4AAAAAAAAABm1lbWJlcgAAAAAAEwAAAAAAAAAGYmFkZ2VzAAAAAAPqAAAH0AAAAAVCYWRnZQAAAAAAAAA=",
        "AAAAAAAAAAAAAAAKZ2V0X2JhZGdlcwAAAAAAAQAAAAAAAAADa2V5AAAAAA4AAAABAAAH0AAAAAZCYWRnZXMAAA==",
        "AAAAAAAAAAAAAAAOZ2V0X21heF93ZWlnaHQAAAAAAAIAAAAAAAAAC3Byb2plY3Rfa2V5AAAAAA4AAAAAAAAADm1lbWJlcl9hZGRyZXNzAAAAAAATAAAAAQAAAAQ=",
        "AAAAAAAAAAAAAAANX19jb25zdHJ1Y3RvcgAAAAAAAAIAAAAAAAAABWFkbWluAAAAAAAAEwAAAAAAAAASZG9tYWluX2NvbnRyYWN0X2lkAAAAAAATAAAAAA==",
        "AAAAAAAAAAAAAAAHdXBncmFkZQAAAAADAAAAAAAAAA1uZXdfd2FzbV9oYXNoAAAAAAAD7gAAACAAAAAAAAAABWFkbWluAAAAAAAAEwAAAAAAAAASZG9tYWluX2NvbnRyYWN0X2lkAAAAAAATAAAAAA==",
        "AAAAAAAAAAAAAAAHdmVyc2lvbgAAAAAAAAAAAQAAAAQ=",
        "AAAAAAAAADRSZWdpc3RlciBhIG5ldyBHaXQgcHJvamVjdHMgYW5kIGFzc29jaWF0ZWQgbWV0YWRhdGEuAAAACHJlZ2lzdGVyAAAABQAAAAAAAAAKbWFpbnRhaW5lcgAAAAAAEwAAAAAAAAAEbmFtZQAAABAAAAAAAAAAC21haW50YWluZXJzAAAAA+oAAAATAAAAAAAAAAN1cmwAAAAAEAAAAAAAAAAEaGFzaAAAABAAAAABAAAADg==",
        "AAAAAAAAAChDaGFuZ2UgdGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIHByb2plY3QuAAAADXVwZGF0ZV9jb25maWcAAAAAAAAFAAAAAAAAAAptYWludGFpbmVyAAAAAAATAAAAAAAAAANrZXkAAAAADgAAAAAAAAALbWFpbnRhaW5lcnMAAAAD6gAAABMAAAAAAAAAA3VybAAAAAAQAAAAAAAAAARoYXNoAAAAEAAAAAA=",
        "AAAAAAAAABhTZXQgdGhlIGxhc3QgY29tbWl0IGhhc2gAAAAGY29tbWl0AAAAAAADAAAAAAAAAAptYWludGFpbmVyAAAAAAATAAAAAAAAAAtwcm9qZWN0X2tleQAAAAAOAAAAAAAAAARoYXNoAAAAEAAAAAA=",
        "AAAAAAAAABhHZXQgdGhlIGxhc3QgY29tbWl0IGhhc2gAAAAKZ2V0X2NvbW1pdAAAAAAAAQAAAAAAAAALcHJvamVjdF9rZXkAAAAADgAAAAEAAAAQ",
        "AAAAAAAAAAAAAAALZ2V0X3Byb2plY3QAAAAAAQAAAAAAAAALcHJvamVjdF9rZXkAAAAADgAAAAEAAAfQAAAAB1Byb2plY3QA",
        "AAAABAAAAAAAAAAAAAAADkNvbnRyYWN0RXJyb3JzAAAAAAAVAAAAAAAAAA9VbmV4cGVjdGVkRXJyb3IAAAAAAAAAAAAAAAAKSW52YWxpZEtleQAAAAAAAQAAAAAAAAATUHJvamVjdEFscmVhZHlFeGlzdAAAAAACAAAAAAAAABZVbnJlZ2lzdGVyZWRNYWludGFpbmVyAAAAAAADAAAAAAAAAAtOb0hhc2hGb3VuZAAAAAAEAAAAAAAAABJJbnZhbGlkRG9tYWluRXJyb3IAAAAAAAUAAAAAAAAAGE1haW50YWluZXJOb3REb21haW5Pd25lcgAAAAYAAAAAAAAAF1Byb3Bvc2FsSW5wdXRWYWxpZGF0aW9uAAAAAAcAAAAAAAAAFU5vUHJvcG9zYWxvclBhZ2VGb3VuZAAAAAAAAAgAAAAAAAAADEFscmVhZHlWb3RlZAAAAAkAAAAAAAAAElByb3Bvc2FsVm90aW5nVGltZQAAAAAACgAAAAAAAAAOUHJvcG9zYWxBY3RpdmUAAAAAAAsAAAAAAAAADVdyb25nVm90ZVR5cGUAAAAAAAAMAAAAAAAAAApXcm9uZ1ZvdGVyAAAAAAANAAAAAAAAAA5UYWxseVNlZWRFcnJvcgAAAAAADgAAAAAAAAAMSW52YWxpZFByb29mAAAADwAAAAAAAAAXTm9Bbm9ueW1vdXNWb3RpbmdDb25maWcAAAAAEAAAAAAAAAANQmFkQ29tbWl0bWVudAAAAAAAABEAAAAAAAAADVVua25vd25NZW1iZXIAAAAAAAASAAAAAAAAABJNZW1iZXJBbHJlYWR5RXhpc3QAAAAAABMAAAAAAAAAC1ZvdGVyV2VpZ2h0AAAAABQ=",
        "AAAAAgAAAAAAAAAAAAAAB0RhdGFLZXkAAAAAAwAAAAAAAAAAAAAABUFkbWluAAAAAAAAAAAAAAAAAAAQRG9tYWluQ29udHJhY3RJZAAAAAEAAAAAAAAABk1lbWJlcgAAAAAAAQAAABM=",
        "AAAAAQAAAAAAAAAAAAAABkJhZGdlcwAAAAAABQAAAAAAAAAJY29tbXVuaXR5AAAAAAAD6gAAABMAAAAAAAAAB2RlZmF1bHQAAAAD6gAAABMAAAAAAAAACWRldmVsb3BlcgAAAAAAA+oAAAATAAAAAAAAAAZ0cmlhZ2UAAAAAA+oAAAATAAAAAAAAAAh2ZXJpZmllZAAAA+oAAAAT",
        "AAAAAwAAAAAAAAAAAAAABUJhZGdlAAAAAAAABQAAAAAAAAAJRGV2ZWxvcGVyAAAAAJiWgAAAAAAAAAAGVHJpYWdlAAAATEtAAAAAAAAAAAlDb21tdW5pdHkAAAAAD0JAAAAAAAAAAAhWZXJpZmllZAAHoSAAAAAAAAAAB0RlZmF1bHQAAAAAAQ==",
        "AAAAAQAAAAAAAAAAAAAADVByb2plY3RCYWRnZXMAAAAAAAACAAAAAAAAAAZiYWRnZXMAAAAAA+oAAAfQAAAABUJhZGdlAAAAAAAAAAAAAAdwcm9qZWN0AAAAAA4=",
        "AAAAAQAAAAAAAAAAAAAABk1lbWJlcgAAAAAAAgAAAAAAAAAEbWV0YQAAABAAAAAAAAAACHByb2plY3RzAAAD6gAAB9AAAAANUHJvamVjdEJhZGdlcwAAAA==",
        "AAAAAgAAAAAAAAAAAAAADlByb3Bvc2FsU3RhdHVzAAAAAAAEAAAAAAAAAAAAAAAGQWN0aXZlAAAAAAAAAAAAAAAAAAhBcHByb3ZlZAAAAAAAAAAAAAAACFJlamVjdGVkAAAAAAAAAAAAAAAJQ2FuY2VsbGVkAAAA",
        "AAAAAgAAAAAAAAAAAAAABFZvdGUAAAACAAAAAQAAAAAAAAAKUHVibGljVm90ZQAAAAAAAQAAB9AAAAAKUHVibGljVm90ZQAAAAAAAQAAAAAAAAANQW5vbnltb3VzVm90ZQAAAAAAAAEAAAfQAAAADUFub255bW91c1ZvdGUAAAA=",
        "AAAAAgAAAAAAAAAAAAAAClZvdGVDaG9pY2UAAAAAAAMAAAAAAAAAAAAAAAdBcHByb3ZlAAAAAAAAAAAAAAAABlJlamVjdAAAAAAAAAAAAAAAAAAHQWJzdGFpbgA=",
        "AAAAAQAAAAAAAAAAAAAAClB1YmxpY1ZvdGUAAAAAAAMAAAAAAAAAB2FkZHJlc3MAAAAAEwAAAAAAAAALdm90ZV9jaG9pY2UAAAAH0AAAAApWb3RlQ2hvaWNlAAAAAAAAAAAABndlaWdodAAAAAAABA==",
        "AAAAAQAAAAAAAAAAAAAADUFub255bW91c1ZvdGUAAAAAAAAFAAAAAAAAAAdhZGRyZXNzAAAAABMAAAAAAAAAC2NvbW1pdG1lbnRzAAAAA+oAAAPuAAAAYAAAAAAAAAAPZW5jcnlwdGVkX3NlZWRzAAAAA+oAAAAQAAAAAAAAAA9lbmNyeXB0ZWRfdm90ZXMAAAAD6gAAABAAAAAAAAAABndlaWdodAAAAAAABA==",
        "AAAAAQAAAAAAAAAAAAAACFZvdGVEYXRhAAAAAwAAAAAAAAANcHVibGljX3ZvdGluZwAAAAAAAAEAAAAAAAAABXZvdGVzAAAAAAAD6gAAB9AAAAAEVm90ZQAAAAAAAAAOdm90aW5nX2VuZHNfYXQAAAAAAAY=",
        "AAAAAQAAAAAAAAAAAAAAE0Fub255bW91c1ZvdGVDb25maWcAAAAAAwAAAAAAAAAKcHVibGljX2tleQAAAAAAEAAAAAAAAAAUc2VlZF9nZW5lcmF0b3JfcG9pbnQAAAPuAAAAYAAAAAAAAAAUdm90ZV9nZW5lcmF0b3JfcG9pbnQAAAPuAAAAYA==",
        "AAAAAQAAAAAAAAAAAAAACFByb3Bvc2FsAAAABQAAAAAAAAACaWQAAAAAAAQAAAAAAAAABGlwZnMAAAAQAAAAAAAAAAZzdGF0dXMAAAAAB9AAAAAOUHJvcG9zYWxTdGF0dXMAAAAAAAAAAAAFdGl0bGUAAAAAAAAQAAAAAAAAAAl2b3RlX2RhdGEAAAAAAAfQAAAACFZvdGVEYXRh",
        "AAAAAQAAAAAAAAAAAAAAA0RhbwAAAAABAAAAAAAAAAlwcm9wb3NhbHMAAAAAAAPqAAAH0AAAAAhQcm9wb3NhbA==",
        "AAAAAgAAAAAAAAAAAAAAClByb2plY3RLZXkAAAAAAAYAAAABAAAAAAAAAANLZXkAAAAAAQAAAA4AAAABAAAAAAAAAAZCYWRnZXMAAAAAAAEAAAAOAAAAAQAAAAAAAAAITGFzdEhhc2gAAAABAAAADgAAAAEAAAAAAAAAA0RhbwAAAAACAAAADgAAAAQAAAABAAAAAAAAABFEYW9Ub3RhbFByb3Bvc2FscwAAAAAAAAEAAAAOAAAAAQAAAAAAAAATQW5vbnltb3VzVm90ZUNvbmZpZwAAAAABAAAADg==",
        "AAAAAQAAAAAAAAAAAAAABkNvbmZpZwAAAAAAAgAAAAAAAAAEaGFzaAAAABAAAAAAAAAAA3VybAAAAAAQ",
        "AAAAAQAAAAAAAAAAAAAAB1Byb2plY3QAAAAAAwAAAAAAAAAGY29uZmlnAAAAAAfQAAAABkNvbmZpZwAAAAAAAAAAAAttYWludGFpbmVycwAAAAPqAAAAEwAAAAAAAAAEbmFtZQAAABA=",
      ]),
      options,
    );
    this.options = options;
  }
  fromJSON = {
    anonymous_voting_setup: this.txFromJSON,
    get_anonymous_voting_config: this.txFromJSON,
    build_commitments_from_votes: this.txFromJSON,
    create_proposal: this.txFromJSON,
    vote: this.txFromJSON,
    execute: this.txFromJSON,
    proof: this.txFromJSON,
    get_dao: this.txFromJSON,
    get_proposal: this.txFromJSON,
    add_member: this.txFromJSON,
    get_member: this.txFromJSON,
    add_badges: this.txFromJSON,
    get_badges: this.txFromJSON,
    get_max_weight: this.txFromJSON,
    upgrade: this.txFromJSON,
    version: this.txFromJSON,
    register: this.txFromJSON,
    update_config: this.txFromJSON,
    commit: this.txFromJSON,
    get_commit: this.txFromJSON,
    get_project: this.txFromJSON,
  };
}
