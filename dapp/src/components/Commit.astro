---
import Topic from "./utils/Topic.astro";
import Loading from "./utils/Loading.astro";
---

<div id="update-commit-section" class="hidden">
  <div class="relative flex flex-col items-center md:flex-row">
    <Topic title="Commit" description="Update hash on-chain" />
  </div>
  
  <div
    class="relative flex flex-col items-center md:flex-row my-6 bg-zinc-100 rounded-[45px]"
  >
    <div class="row items-center py-12 px-4 md:px-20 md:w-8/12 md:py-10">
      <div class="space-y-8 md:w-full">
        <label class="block mb-2 text-base font-medium text-black">
          Commit hash
          <input
            type="text"
            id="commit_hash"
            name="commit_hash"
            class="block p-3 w-full text-base text-black bg-white rounded-lg border shadow-sm focus:ring-black focus:border-black"
            placeholder="Last commit hash"
            required
            minlength="40"
            maxlength="40"
          />
        </label>
        <div id="wrap-commit-button">
          <button
            data-commit-hash
            aria-controls="commit-hash"
            class="w-full py-5 bg-zinc-900 rounded-[14px] justify-center gap-2.5 inline-flex"
          >
            <span class="text-center text-white text-xl font-normal leading-7"
              >Commit on-chain</span
            >
          </button>
        </div>
      </div>
      <div id="wrap-commit-loader" class="hidden">
        <Loading />
      </div>
    </div>
  </div>
</div>

<script>
  import { commitHash } from "../service/ProjectService";
  import { loadProjectInfo } from "../service/StateService";
  import { loadedPublicKey } from "./stellar-wallets-kit";

  document.addEventListener("astro:page-load", () => {
    const projectInfo = loadProjectInfo();

    if (projectInfo) {
      const connectedPublicKey = loadedPublicKey();

      const isMaintainer = connectedPublicKey ? projectInfo.maintainers.includes(connectedPublicKey) : false;
      const updateCommitSection = document.getElementById("update-commit-section");
      if (updateCommitSection) {
        updateCommitSection.classList.toggle("hidden", !isMaintainer);
      }
    }
    const commit_hash = document.getElementById(
      "commit_hash",
    ) as HTMLInputElement;

    const wrap_loader = document.getElementById(
      "wrap-commit-loader",
    ) as HTMLDivElement;
    const wrap_button = document.getElementById(
      "wrap-commit-button",
    ) as HTMLDivElement;
    const button = document.querySelector(
      "[data-commit-hash]",
    ) as HTMLButtonElement;

    if (button) {
      button.addEventListener("click", async () => {
        wrap_loader.style.display = "block";
        wrap_button.style.display = "none";
        try {
          const commit_status = await commitHash(commit_hash.value);

        wrap_loader.style.display = "none";
        wrap_button.style.display = "block";
        if (!commit_status) {
          alert("Hash could not be committed! Please retry.");
        } else {
          wrap_button.innerHTML = "Hash committed!";
        }
      } catch (e) {
        console.error(e);
      }
    });
  }});
</script>
