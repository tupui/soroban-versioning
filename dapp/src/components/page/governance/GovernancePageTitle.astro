---
import { BackIcon } from "components/icons";
import PrimaryButton from "../../utils/PrimaryButton.astro";
---

<div
  class="z-10 mx-auto w-full max-w-[1048px] flex justify-between items-center"
>
  <button id="back-button" class="flex gap-[14px]">
    <BackIcon />
    <p class="leading-5 text-xl text-primary">Back to Project Page</p>
  </button>
  <PrimaryButton id="create-proposal-button" icon="/icons/send.svg">
    Submit Proposal
  </PrimaryButton>
</div>

<script>
  import { getProjectFromName } from "@service/ReadContractService";
  import { navigate } from "astro:transitions/client";
  import { connectedPublicKey, projectNameForGovernance } from "utils/store";
  import { capitalizeFirstLetter } from "utils/utils";

  document.addEventListener("astro:page-load", async () => {
    let projectName = "";
    let maintainers: string[] = [];
    let connectedAddress = "";
    projectNameForGovernance.subscribe(async (_projectName) => {
      if (_projectName) {
        const titleElement = document
          .getElementById("proposal-page-topic")
          ?.querySelector("span");
        if (titleElement) {
          titleElement.textContent = `${capitalizeFirstLetter(_projectName)} Governance`;
        }
        projectName = _projectName;
        const res = await getProjectFromName(_projectName);
        const projectInfo = res.data;
        if (projectInfo && projectInfo.maintainers) {
          maintainers = projectInfo?.maintainers;
        } else {
          alert(res.errorMessage);
        }
      }
    });

    connectedPublicKey.subscribe((publicKey) => {
      connectedAddress = publicKey;
    });

    const backButton = document.getElementById("back-button");
    if (backButton) {
      backButton.addEventListener("click", () => {
        navigate(`/project?name=${projectName}`);
      });
    }

    const submitProposalButton = document.getElementById(
      "create-proposal-button",
    );

    if (submitProposalButton) {
      submitProposalButton.addEventListener("click", () => {
        if (!connectedAddress) {
          alert("Please connect your wallet first");
          return;
        }

        if (projectName) {
          if (maintainers.includes(connectedAddress)) {
            navigate(`/proposal/new?name=${projectName}`);
          } else {
            alert("Only maintainers can submit proposals");
          }
        } else {
          alert("Project name is not provided");
        }
      });
    }
  });
</script>
