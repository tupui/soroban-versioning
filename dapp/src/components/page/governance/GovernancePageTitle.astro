---
import PrimaryButton from "../../utils/PrimaryButton.astro";
import Topic from "../../utils/Topic.astro";
---

<div
  class="relative flex flex-col items-center md:flex-row justify-between mb-1.5 mt-4 sm:mt-8 md:mt-12 gap-y-4"
>
  <Topic title="Project Governance" description="" id="proposal-page-topic" />
  <div id="create-proposal-button" class="">
    <PrimaryButton
      wrapId="wrap-create-proposal-button"
      dataAttr="data-create-proposal-button"
      ariaControls="create-proposal-modal"
      buttonText="Submit Proposal"
    />
  </div>
</div>

<script>
  import { getProjectFromName } from "@service/ReadContractService";
  import { navigate } from "astro:transitions/client";
  import { connectedPublicKey, projectNameForGovernance } from "utils/store";
  import { capitalizeFirstLetter } from "utils/utils";

  document.addEventListener("astro:page-load", async () => {
    let projectName = "";
    let maintainers: string[] = [];
    let connectedAddress = "";
    projectNameForGovernance.subscribe(async (_projectName) => {
      if (_projectName) {
        const titleElement = document
          .getElementById("proposal-page-topic")
          ?.querySelector("span");
        if (titleElement) {
          titleElement.textContent = `${capitalizeFirstLetter(_projectName)} Governance`;
        }
        projectName = _projectName;
        const projectInfo = await getProjectFromName(_projectName);
        if (projectInfo && projectInfo.maintainers) {
          maintainers = projectInfo?.maintainers;
        }
      }
    });

    connectedPublicKey.subscribe((publicKey) => {
      connectedAddress = publicKey;
    });

    const submitProposalButton = document.getElementById(
      "wrap-create-proposal-button",
    );

    if (submitProposalButton) {
      submitProposalButton.addEventListener("click", () => {
        if (!connectedAddress) {
          alert("Please connect your wallet first");
          return;
        }

        if (projectName) {
          if (maintainers.includes(connectedAddress)) {
            navigate(`/proposal/new?name=${projectName}`);
          } else {
            alert("Only maintainers can submit proposals");
          }
        } else {
          alert("Project name is not provided");
        }
      });
    }
  });
</script>
