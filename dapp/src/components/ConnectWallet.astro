<div id="connect-wrap" aria-live="polite" class="relative">
  <div
    id="get-started"
    class="absolute hidden top-6 -left-16 xl:flex flex-col gap-2 transform -rotate-[13deg]"
  >
    <img src="/arrow.svg" alt="" class="w-[56px] h-[69px]" />
    <p class="text-victormono text-lg italic text-zinc-700 text-nowrap">
      Get Started
    </p>
  </div>
  <button
    data-connect
    aria-controls="connect-wrap"
    class="w-[130px] sm:w-[162px] md:w-[180px] h-10 md:h-12 flex justify-center items-center gap-2 md:gap-3 bg-white shadow-button truncate"
  >
    <p
      class="text-sm sm:text-base md:text-xl leading-4 md:leading-5 text-pink truncate"
    >
      Connect
    </p>
    <img
      src="/icons/connect.png"
      alt=""
      class="w-4 md:w-5 h-4 md:h-5 flex-shrink-0"
    />
  </button>
</div>

<script>
  import { connectedPublicKey } from "utils/store";
  import {
    initializeConnection,
    loadedPublicKey,
    setPublicKey,
    disconnect,
  } from "../service/walletService";
  import { truncateMiddle } from "../utils/utils";
  import { kit } from "./stellar-wallets-kit";

  document.addEventListener("astro:page-load", () => {
    initializeConnection();
    const button = document.querySelector(
      "[data-connect]",
    ) as HTMLButtonElement;

    async function setLoggedIn(publicKey: string) {
      const truncatedKey = truncateMiddle(publicKey, 13);
      button.innerHTML = `<p class="text-sm sm:text-base md:text-xl leading-4 md:leading-5 text-white truncate">Profile</p>
      <img src="/icons/profile.svg" alt="" class="w-4 md:w-5 h-4 md:h-5 flex-shrink-0" />`;
      button.title = publicKey;
      button.classList.toggle("bg-white", false);
      button.classList.toggle("bg-primary", true);
      button.classList.toggle("text-white", true);
      
      // Change click handler to open profile instead of connect wallet
      button.onclick = () => {
        window.dispatchEvent(new CustomEvent("openProfileModal"));
      };
    }

    const publicKey = loadedPublicKey();
    if (publicKey) {
      setLoggedIn(publicKey);
    }

    if (button) {
      button.addEventListener("click", async () => {
        if (button.title) {
          // If the button has a title, it means we're logged in
          // and the button should open the profile modal
          window.dispatchEvent(new CustomEvent("openProfileModal"));
          return;
        }
        
        try {
          await kit.openModal({
            onWalletSelected: async (option: { id: string }) => {
              try {
                kit.setWallet(option.id);
                const { address } = await kit.getAddress();
                setPublicKey(address);
                await setLoggedIn(address);
                window.dispatchEvent(
                  new CustomEvent("walletConnected", { detail: address }),
                );
              } catch (e) {
                console.error(e);
              }
            },
          });
        } catch (e) {
          console.error(e);
        }
      });
    }

    const getStarted = document.querySelector("#get-started");
    connectedPublicKey.subscribe((publicKey) => {
      if (publicKey) {
        getStarted?.classList.remove("xl:flex");
      }
    });
    
    // Handle disconnect event from the profile modal
    window.addEventListener("walletDisconnected", () => {
      disconnect();
      // Reset button to Connect state
      button.innerHTML = `<p class="text-sm sm:text-base md:text-xl leading-4 md:leading-5 text-pink truncate">Connect</p>
      <img src="/icons/connect.png" alt="" class="w-4 md:w-5 h-4 md:h-5 flex-shrink-0" />`;
      button.title = "";
      button.classList.toggle("bg-white", true);
      button.classList.toggle("bg-primary", false);
      button.classList.toggle("text-white", false);
    });
  });
</script>
