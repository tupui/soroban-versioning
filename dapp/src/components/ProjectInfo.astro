---
import Topic from "./utils/Topic.astro";
import Modal from "./utils/Modal.astro";
import Loading from "./utils/Loading.astro";
import CommitHistory from "./CommitHistory.jsx";
import PrimaryButton from "./utils/PrimaryButton.astro";
import ModalInput from "./utils/ModalInput.astro";
---

<div class="relative flex flex-col items-center md:flex-row justify-between">
  <Topic title="Project" description="Details about the project" id="project-name-topic"/>
  <div id="open-update-config-modal-button" class="mb-1.5 mt-12 pr-3 hidden">
    <PrimaryButton
      wrapId="wrap-update-config"
      dataAttr="data-update-config"
      ariaControls="update-config-modal"
      buttonText="Update Config"
    />
  </div>
</div>

<div
  class="relative flex flex-col items-center md:flex-row my-6 bg-zinc-100 rounded-3xl sm:rounded-[45px]"
>
  <div class="row items-center py-8 sm:py-12 px-4 sm:px-8 md:px-20 w-full md:py-10">
    <div class="space-y-6 md:w-full">
      <div id="project-name" class="flex items-end space-x-2">
        <h3 class="text-base sm:text-lg font-semibold pb-1 sm:pb-0.5">Project Name:</h3>
        <p id="project-name-value" class="text-3xl font-bold"></p>
      </div>
      <div id="project-maintainers" class="space-y-1">
        <h3 class="text-base sm:text-lg font-semibold">Maintainers:</h3>
        <ul class="list-disc list-outside pl-5"></ul>
      </div>
      <div class="flex flex-col sm:flex-row sm:flex-wrap items-start sm:items-center sm:gap-x-4">
        <div id="project-link" class="flex items-center space-x-2 px-2 py-1">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z" clip-rule="evenodd" />
          </svg>
          <a href="#" id="github-link" class="text-blue-600 hover:underline" target="_blank" rel="noopener noreferrer">Link to GitHub</a>
        </div>
        <div id="view-commit-history" class="flex items-center space-x-2 cursor-pointer hover:bg-zinc-300 transition-colors duration-300 rounded-lg px-2 py-1">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path id="commit-icon-up" fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v3.586L7.707 9.293a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 10.586V7z" clip-rule="evenodd" />
            <path id="commit-icon-down" class="hidden" fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd" />
          </svg>
          <span id="view-commit-text">View Commit History</span>
        </div>
        <div id="view-project-info" class="flex items-center space-x-2 cursor-pointer hover:bg-zinc-300 transition-colors duration-300 rounded-lg px-2 py-1">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
          </svg>
          <span>View Project Info</span>
        </div>
      </div>
    </div>
    <div id="commit-history-container" class="mt-4 overflow-hidden transition-all duration-300 max-h-0">
      <CommitHistory client:load/>
    </div>
  </div>
</div>

<Modal id="update-config-modal" title="Update Config">
  <div id="modal-content" class="space-y-4 w-[calc(100vw-80px)] sm:w-[calc(100vw-120px)] md:w-[600px]">
    <h2 id="update-modal-project-name" class="text-2xl sm:text-3xl font-bold mb-4">Project Name</h2>

    <label class="block mb-2 text-base font-medium text-black">
      Maintainers
      <ModalInput
        id="modal-maintainers"
        placeholder="List of maintainers' addresses as G...,G..."
        required
      />
    </label>

    <label class="block mb-2 text-base font-medium text-black">
      GitHub repository URL
      <ModalInput
        id="modal-config-url"
        placeholder="GitHub repository URL"
        required
      />
    </label>

    <label class="block mb-2 text-base font-medium text-black">
      Information file hash
      <ModalInput
        id="modal-config-hash"
        placeholder="Information file hash"
        required
        minlength="64"
        maxlength="64"
      />
    </label>

    <div id="wrap-update-button" class="relative">
      <PrimaryButton
        wrapId="wrap-update-config-button"
        dataAttr="update-config-button"
        buttonId="update-config-button"
        ariaControls="update-config-button"
        buttonText="Update Config"
      />
      <div id="update-config-loader" class="absolute top-0 left-0 w-full h-full bg-zinc-900 rounded-[14px] justify-center items-center hidden">
        <Loading theme="dark" />
      </div>
    </div>
  </div>
</Modal>

<Modal id="project-info-modal" title="">
  <div class="space-y-6 w-[calc(100vw-80px)] sm:w-[calc(100vw-120px)] md:w-full md:max-w-[800px]">
    <div class="flex items-center space-x-4">
      <img id="project-logo" src="" alt="Project Logo" class="w-12 h-12 object-contain">
      <h2 id="view-modal-project-name" class="text-2xl sm:text-3xl font-bold"></h2>
    </div>
    
    <div class="flex flex-col md:flex-row gap-6">
      <img id="project-thumbnail" src="/fallback-image.jpg" alt="Project Thumbnail" class="w-full md:w-[40%] object-cover rounded-lg">
      <div class="flex-1 pt-2">
        <p id="project-description" class="flex-1"></p>
      </div>
    </div>
    
    <div class="space-y-2">
      <div class="flex flex-col">
        <h3 class="font-semibold mb-2">Official Links</h3>
        <div id="official-links" class="flex flex-wrap gap-2"></div>
      </div>
      
      <div class="flex flex-col">
        <h3 class="font-semibold mb-2">Social</h3>
        <div id="social-links" class="flex flex-wrap gap-2"></div>
      </div>
    </div>
    <div class="flex justify-between items-start gap-6">
      <p id="company-name" class=""></p>
      <p id="project-version" class="text-sm"></p>
    </div>
  </div>
</Modal>

<script>
  import { loadedPublicKey } from "./stellar-wallets-kit";
  import { getProject, getProjectHash, updateConfig } from "../service/ProjectService";
  import { initializeProjectState, loadConfigData, loadProjectInfo, setProject, setProjectLatestSha } from "../service/StateService";
  import type { ConfigData } from "../types/projectConfig";
  document.addEventListener("astro:page-load", () => {
    initializeProjectState();
    const modal = document.getElementById("update-config-modal") as HTMLDialogElement;

    async function updateProjectInfo() {
      const projectInfo = loadProjectInfo();
      if (projectInfo) {
        const projectNameElement = document.getElementById("project-name-value");
        if (projectNameElement) {
          projectNameElement.textContent = projectInfo.name;
        }
        const maintainersList = document.getElementById("project-maintainers");
        if (maintainersList) {
          const ul = maintainersList.querySelector("ul");
          if (ul) {
            ul.innerHTML = '';
            projectInfo.maintainers.forEach((maintainer: string) => {
              const li = document.createElement("li");
              li.className = "relative";

              const content = document.createElement("p");
              content.className = "truncate";
              content.textContent = maintainer;

              li.appendChild(content);

              const popup = document.createElement("p");
              popup.className = "absolute left-0 bottom-full mb-1 bg-black text-white text-xs text-center p-1 rounded hidden before:content-[''] before:absolute before:left-1/2 before:top-full before:-translate-x-1/2 before:border-4 before:border-transparent before:border-t-black max-w-[240px] sm:max-w-[320px] md:max-w-none break-words";
              popup.textContent = maintainer;
              li.appendChild(popup);
              
              li.addEventListener("mouseenter", () => {
                popup.classList.remove("hidden");
              });
              
              li.addEventListener("mouseleave", () => {
                popup.classList.add("hidden");
              });
              
              ul.appendChild(li);
            });
          }
        }
        const githubLink = document.getElementById("github-link") as HTMLAnchorElement;
        if (githubLink) {
          githubLink.href = `${projectInfo.config.url}`;
        }

        // Update modal content
        const modalProjectName = document.getElementById("update-modal-project-name");
        if (modalProjectName) {
          modalProjectName.textContent = projectInfo.name;
        }
        
        const modalMaintainers = document.getElementById("modal-maintainers") as HTMLInputElement;
        if (modalMaintainers) {
          modalMaintainers.value = projectInfo.maintainers.join(',');
        }
        const modalConfigUrl = document.getElementById("modal-config-url") as HTMLInputElement;
        if (modalConfigUrl) {
          modalConfigUrl.value = projectInfo.config.url;
        }
        const modalConfigHash = document.getElementById("modal-config-hash") as HTMLInputElement;
        if (modalConfigHash) {
          modalConfigHash.value = projectInfo.config.hash;
        }
      }
    }

    function updateUpgradeConfigButtonVisibility() {
      const projectInfo = loadProjectInfo();

      if (projectInfo) {
        const connectedPublicKey = loadedPublicKey();
        const isMaintainer = connectedPublicKey ? projectInfo.maintainers.includes(connectedPublicKey) : false;
        const updateConfigButton = document.getElementById("open-update-config-modal-button");
        if (updateConfigButton) {
          updateConfigButton.classList.toggle("hidden", !isMaintainer);
        }
      }
    }
    
    async function updateProjectLatestSha() {
      try {
        const latestSha = await getProjectHash();
        if (latestSha) {
          setProjectLatestSha(latestSha);
        }
      } catch (error) {
        console.error("Error updating project latest SHA:", error);
      }
    }

    updateProjectInfo();
    updateUpgradeConfigButtonVisibility();
    updateProjectLatestSha();  // Call this function to update the latest SHA

    const button = document.querySelector(
      "[data-update-config]",
    ) as HTMLButtonElement; 
    if (button) {
      button.addEventListener("click", async () => {
          console.log("Update config button clicked");
          modal.showModal();
      });
    }

    const updateConfigButton = document.getElementById("update-config-button");
    const updateConfigLoader = document.getElementById("update-config-loader");
    if (updateConfigButton && updateConfigLoader) {
      updateConfigButton.addEventListener("click", async () => {
        const modalMaintainers = (document.getElementById("modal-maintainers") as HTMLInputElement).value;
        const modalConfigUrl = (document.getElementById("modal-config-url") as HTMLInputElement).value;
        const modalConfigHash = (document.getElementById("modal-config-hash") as HTMLInputElement).value;

        updateConfigLoader.style.display = "inline-flex";

        try {
          const updateStatus = await updateConfig(
            modalMaintainers,
            modalConfigUrl,
            modalConfigHash
          );

          if (updateStatus) {
            const project = await getProject();
            if (project && project.name && project.config && project.maintainers) {
              setProject(project);
            }
            updateProjectInfo();
            (document.getElementById("update-config-modal") as HTMLDialogElement).close();
          } else {
            alert("Failed to update project config. Please try again.");
          }
        } catch (error) {
          console.error("Error updating config:", error);
          alert("An error occurred while updating the project config. Please try again.");
        } finally {
          updateConfigLoader.style.display = "none";
        }
      });
    }

    const viewCommitHistory = document.getElementById("view-commit-history");
    const viewCommitText = document.getElementById("view-commit-text");
    const commitHistoryContainer = document.getElementById("commit-history-container");
    const commitIconUp = document.getElementById("commit-icon-up");
    const commitIconDown = document.getElementById("commit-icon-down");

    if (viewCommitHistory && viewCommitText && commitHistoryContainer && commitIconUp && commitIconDown) {
      viewCommitHistory.addEventListener("click", () => {
        if (commitHistoryContainer.style.maxHeight === "0px" || !commitHistoryContainer.style.maxHeight) {
          commitHistoryContainer.style.maxHeight = `${commitHistoryContainer.scrollHeight}px`;
        } else {
          commitHistoryContainer.style.maxHeight = "0px";
        }
      });

      commitHistoryContainer.addEventListener("transitionend", () => {
        if (commitHistoryContainer.style.maxHeight === "0px") {
          viewCommitText.textContent = "View Commit History";
          commitIconUp.classList.remove("hidden");
          commitIconDown.classList.add("hidden");
        } else {
          viewCommitText.textContent = "Hide Commit History";
          commitIconUp.classList.add("hidden");
          commitIconDown.classList.remove("hidden");
          setTimeout(() => {
            const latestCommit = document.getElementById('latest-commit-record');
            if (latestCommit) {
              latestCommit.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
          }, 1000);
        }
      });
    }

    window.addEventListener('walletConnected', (_event: Event) => {
      updateUpgradeConfigButtonVisibility();
    });

    const viewProjectInfo = document.getElementById("view-project-info");
    const projectInfoModal = document.getElementById("project-info-modal") as HTMLDialogElement;

    if (viewProjectInfo && projectInfoModal) {
      viewProjectInfo.addEventListener("click", async () => {
        const projectInfo = loadProjectInfo();
        if (projectInfo) {
          const configData = loadConfigData();
          if (configData) {
            updateProjectInfoModal(projectInfo, configData);
            projectInfoModal.showModal();
          } else {
            alert("Can not read config data.");
          }
        } else {
          console.error("Failed to load project info");
        }
      });
    }

    function updateProjectInfoModal(projectInfo: any, configData: ConfigData) {
      const modalProjectName = document.getElementById("view-modal-project-name");
      const projectLogo = document.getElementById("project-logo") as HTMLImageElement;
      const projectThumbnail = document.getElementById("project-thumbnail") as HTMLImageElement;
      const projectDescription = document.getElementById("project-description");
      const officialLinks = document.getElementById("official-links");
      const socialLinks = document.getElementById("social-links");
      const companyName = document.getElementById("company-name");
      const projectVersion = document.getElementById("project-version");

      if (modalProjectName) modalProjectName.textContent = projectInfo.name;
      if (projectLogo) {
        if (configData.logoImageLink) {
          projectLogo.src = configData.logoImageLink;
          projectLogo.style.display = 'block';
        } else {
          projectLogo.src = '/logo.svg';
          projectLogo.style.display = 'block';
          // projectLogo.style.display = 'none';
        }
      }
      if (projectThumbnail) projectThumbnail.src = configData.thumbnailImageLink || '/fallback-image.jpg';
      if (projectDescription) projectDescription.textContent = configData.description || '';
      if (companyName) companyName.innerHTML = `Developed by   <strong class="font-extrabold"> ${configData.companyName || ''}</strong>`;
      if (projectVersion) projectVersion.textContent = `Version: ${configData.version || ''}`;

      // Official Links
      if (officialLinks) {
        officialLinks.innerHTML = '';
        if (configData.officials.websiteLink) {
          addLinkButton(officialLinks, 'Website', configData.officials.websiteLink, 'web');
        }
        if (configData.officials.githubLink) {
          addLinkButton(officialLinks, 'GitHub', configData.officials.githubLink, 'github');
        }
      }

      // Social Links (example, add more as needed)
      if (socialLinks) {
        socialLinks.innerHTML = '';
        if (configData.socialLinks.twitter) {
          addLinkButton(socialLinks, 'Twitter', configData.socialLinks.twitter, 'twitter');
        }
        if (configData.socialLinks.telegram) {
          addLinkButton(socialLinks, 'Telegram', configData.socialLinks.telegram, 'telegram');
        }
        if (configData.socialLinks.instagram) {
          addLinkButton(socialLinks, 'Instagram', configData.socialLinks.instagram, 'instagram');
        }
        if (configData.socialLinks.discord) {
          addLinkButton(socialLinks, 'Discord', configData.socialLinks.discord, 'discord');
        }
      }
    }

    function addLinkButton(container: HTMLElement, title: string, url: string, iconName: string) {
      const button = document.createElement('a');
      button.href = url;
      button.target = '_blank';
      button.rel = 'noopener noreferrer';
      button.className = 'flex items-center space-x-1 bg-zinc-200 hover:bg-zinc-300 rounded-lg px-3 py-1 text-sm';
      
      const icon = document.createElement('span');
      icon.innerHTML = getIconSVG(iconName);
      icon.className = 'w-4 h-4';
      
      const text = document.createElement('span');
      text.textContent = title;
      
      button.appendChild(icon);
      button.appendChild(text);
      container.appendChild(button);
    }

    function getIconSVG(iconName: string) {
      const icons: { [key: string]: string } = {
        web: '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" /></svg>',
        github: '<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/></svg>',
        twitter: '<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/></svg>',
        telegram: '<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M23.91 3.79L20.3 20.84c-.25 1.21-.98 1.5-2 .94l-5.5-4.07-2.66 2.57c-.3.3-.55.56-1.1.56-.72 0-.6-.27-.84-.95L6.3 13.7l-5.45-1.7c-1.18-.35-1.19-1.16.26-1.75l21.26-8.2c.97-.43 1.9.24 1.53 1.73z"/></svg>'
      };
      return icons[iconName] || '';
    }
  });
</script>
